// <auto-generated />
using System;
using FlightControlWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlightControlWeb.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("FlightControlWeb.Models.FlightPlan", b =>
                {
                    b.Property<string>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("InitialLocationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Passengers")
                        .HasColumnType("INTEGER");

                    b.HasKey("FlightId");

                    b.HasIndex("InitialLocationId");

                    b.ToTable("FlightsPlans");
                });

            modelBuilder.Entity("FlightControlWeb.Models.FlightServerMap", b =>
                {
                    b.Property<string>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerId")
                        .HasColumnType("TEXT");

                    b.HasKey("FlightId");

                    b.ToTable("Map");
                });

            modelBuilder.Entity("FlightControlWeb.Models.InitialLocation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("InitialLocation");
                });

            modelBuilder.Entity("FlightControlWeb.Models.Segment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FlightPlanFlightId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<int>("TimeSpanSeconds")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FlightPlanFlightId");

                    b.ToTable("Segments");
                });

            modelBuilder.Entity("FlightControlWeb.Models.Server", b =>
                {
                    b.Property<string>("ServerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerURL")
                        .HasColumnType("TEXT");

                    b.HasKey("ServerId");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("FlightControlWeb.Models.FlightPlan", b =>
                {
                    b.HasOne("FlightControlWeb.Models.InitialLocation", "InitialLocation")
                        .WithMany()
                        .HasForeignKey("InitialLocationId");
                });

            modelBuilder.Entity("FlightControlWeb.Models.Segment", b =>
                {
                    b.HasOne("FlightControlWeb.Models.FlightPlan", null)
                        .WithMany("Segments")
                        .HasForeignKey("FlightPlanFlightId");
                });
#pragma warning restore 612, 618
        }
    }
}
